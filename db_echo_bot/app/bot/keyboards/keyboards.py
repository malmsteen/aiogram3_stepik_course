from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_lang_settings_kb(i18n: dict, locales: list[str], checked: str) -> InlineKeyboardMarkup:
    buttons = []
    for locale in sorted(locales):
        if locale == "default":
            continue
        if locale == checked:
            buttons.append(
                [
                    InlineKeyboardButton(
                        text=f"üîò {i18n.get(locale)}", callback_data=locale
                    )
                ]
            )
        else:
            buttons.append(
                [
                    InlineKeyboardButton(
                        text=f"‚ö™Ô∏è {i18n.get(locale)}", callback_data=locale
                    )
                ]
            )
    buttons.append(
        [
            InlineKeyboardButton(
                text=i18n.get("cancel_lang_button_text"), 
                callback_data="cancel_lang_button_data"
            ),
            InlineKeyboardButton(
                text=i18n.get("save_lang_button_text"), 
                callback_data="save_lang_button_data"
            ),
        ]
    )
    return InlineKeyboardMarkup(inline_keyboard=buttons)

sections = [
    "–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è. –ß–∞—Å—Ç—å I",
    "–í–µ–∫—Ç–æ—Ä—ã",
    "–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è. –ß–∞—Å—Ç—å I",
    "–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏",    
    "–£—Ä–∞–≤–Ω–µ–Ω–∏—è. –ß–∞—Å—Ç—å I",
    "–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–π",
    "–ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è –∏ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–∞—è",
    "–ü—Ä–∏–∫–ª–∞–¥–Ω—ã–µ –∑–∞–¥–∞—á–∏",
    "–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏",
    "–ì—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π",
    "–≠–∫—Å—Ç—Ä–µ–º—É–º—ã —Ñ—É–Ω–∫—Ü–∏–π",
    "–£—Ä–∞–≤–Ω–µ–Ω–∏—è",
    "–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è. –ß–∞—Å—Ç—å II",
    "–ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞",
    "–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è. –ß–∞—Å—Ç—å II",
    "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏",    
    "–ó–∞–¥–∞—á–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏",
    "–ó–∞–¥–∞—á–∏ –ø–æ —Ç–µ–æ—Ä–∏–∏ —á–∏—Å–µ–ª",    
]

def create_sections_keyboard() -> InlineKeyboardMarkup:    
    buttons = [InlineKeyboardButton(text=text, callback_data=str(data+1)) for data, text in enumerate(sections)]
    kb_builder = InlineKeyboardBuilder()
    

    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä –º–µ—Ç–æ–¥–æ–º `row`
    kb_builder.row(*buttons, width=2)    
    return kb_builder.as_markup()
